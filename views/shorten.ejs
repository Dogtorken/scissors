<%- include('partials/header2'); -%>
<body>
    <div class="container">
        <form id="shortenForm" class="my-4 form-inline">
            <label for="fullUrl" class="sr-only">Url</label>
            <input required placeholder="Url" type="url" name="fullUrl" id="fullUrl" class="form-control col mr-2">
            <button class="btn btn-success" type="submit">Shorten</button>
        </form>

        <!-- Add a container for displaying messages -->
        <div id="messageContainer" class="alert" style="display: none;"></div>

        <table class="table table-striped table-responsive">
            <thead>
                <tr>
                    <th>Full URL</th>
                    <th>Short URL</th>
                    <th>Clicks</th>
                    <th>QR Code</th>
                    <th>Delete</th>
                </tr>
            </thead>
            <tbody id="urlTableBody">
                <% shortUrls.forEach(shortUrl => { %>
                <tr>
                    <td><a href="<%= shortUrl.full %>"><%= shortUrl.full %></a></td>
                    <td><a href="/<%= shortUrl.short %>"><%= shortUrl.short %></a></td>
                    <td><%= shortUrl.clicks %></td>
                    <td><img src="<%= shortUrl.qrCode %>" alt="QR Code" width="100" /></td>
                    <td><button class="btn btn-danger delete-btn" data-id="<%= shortUrl._id %>">Delete</button></td>
                </tr>
                <% }) %>
            </tbody>
        </table>
    </div>
    
    <script>
    document.addEventListener('DOMContentLoaded', () => {
        const form = document.getElementById('shortenForm');
        const urlTableBody = document.getElementById('urlTableBody');
        const messageContainer = document.getElementById('messageContainer');

        // Handle form submission
        form.addEventListener('submit', async (e) => {
            e.preventDefault();
            const fullUrl = document.getElementById('fullUrl').value;

            try {
                const response = await fetch('/shorten', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ fullUrl }),
                });

                const data = await response.json();

                if (data.alreadyExists) {
                    // Show message if URL already exists
                    showMessage('This URL has already been shortened.', 'warning');
                } else {
                    // Add new row to the table
                    addUrlToTable(data.shortUrl);
                    showMessage('URL shortened successfully!', 'success');
                }

                form.reset();
            } catch (error) {
                console.error('Error:', error);
                showMessage('An error occurred while shortening the URL.', 'danger');
            }
        });

        // Function to add a new row to the table
        function addUrlToTable(shortUrl) {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td><a href="${shortUrl.full}">${shortUrl.full}</a></td>
                <td><a href="/${shortUrl.short}">${shortUrl.short}</a></td>
                <td>${shortUrl.clicks}</td>
                <td><img src="${shortUrl.qrCode}" alt="QR Code" width="100" /></td>
                <td><button class="btn btn-danger delete-btn" data-id="${shortUrl._id}">Delete</button></td>
            `;
            urlTableBody.prepend(row);
            addDeleteListener(row.querySelector('.delete-btn'));
        }

        // Function to show messages
        function showMessage(message, type) {
            messageContainer.textContent = message;
            messageContainer.className = `alert alert-${type}`;
            messageContainer.style.display = 'block';
            setTimeout(() => {
                messageContainer.style.display = 'none';
            }, 3000);
        }

        // Function to handle delete
        function addDeleteListener(button) {
            button.addEventListener('click', async () => {
                const id = button.getAttribute('data-id');
                try {
                    const response = await fetch(`/shorten/${id}`, {
                        method: 'DELETE',
                    });
                    
                    if (response.ok) {
                        button.closest('tr').remove();
                        showMessage('URL deleted successfully!', 'success');
                    } else {
                        showMessage('Failed to delete URL.', 'danger');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    showMessage('An error occurred while deleting the URL.', 'danger');
                }
            });
        }

        // Add delete listeners to existing buttons
        document.querySelectorAll('.delete-btn').forEach(addDeleteListener);
    });
    </script>
    
    <%- include('partials/footer'); -%>
</body>
</html>